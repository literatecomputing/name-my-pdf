name: Deploy Website to Bunny.net

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: docs

      - name: Build Jekyll site
        run: |
          cd docs
          bundle install
          bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Deploy to Bunny.net Storage
        run: |
          cd docs/_site
          
          # Deploy using Bunny.net Storage API
          # This script uploads all files to the storage zone
          
          upload_file() {
            local file="$1"
            local remote_path="$2"
            
            echo "Uploading: $remote_path"
            curl -X PUT \
              "https://storage.bunnycdn.com/${{ secrets.BUNNY_STORAGE_ZONE }}/$remote_path" \
              -H "AccessKey: ${{ secrets.BUNNY_ACCESS_KEY }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary "@$file" \
              --fail --silent --show-error
          }
          
          # Upload all files recursively
          find . -type f | while read file; do
            # Remove leading ./
            remote_path="${file#./}"
            upload_file "$file" "$remote_path"
          done
          
          echo "âœ… Website deployed successfully to Bunny.net!"

      - name: Purge Bunny CDN Cache (optional)
        if: success()
        run: |
          # Purge the CDN cache to ensure latest content is served
          curl -X POST "https://api.bunny.net/pullzone/${{ secrets.BUNNY_PULLZONE_ID }}/purgeCache" \
            -H "AccessKey: ${{ secrets.BUNNY_ACCESS_KEY }}" \
            || echo "Cache purge failed or not configured (optional)"
